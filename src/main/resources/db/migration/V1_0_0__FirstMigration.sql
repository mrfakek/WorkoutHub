CREATE TABLE accounts
(
    id                       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username                 VARCHAR(255)                            NOT NULL,
    email                    VARCHAR(255),
    first_name               VARCHAR(255),
    last_name                VARCHAR(255),
    password                 VARCHAR(255)                            NOT NULL,
    role                     VARCHAR(255),
    current_anthropometry_id BIGINT,
    created_at               TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_accounts PRIMARY KEY (id)
);

CREATE TABLE anthropometrics
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sex                   VARCHAR(255),
    birthday              date,
    age                   INTEGER,
    height                DOUBLE PRECISION,
    bodyweight            DOUBLE PRECISION,
    chest_circumference   DOUBLE PRECISION,
    waist_circumference   DOUBLE PRECISION,
    biceps_circumference  DOUBLE PRECISION,
    forearm_circumference DOUBLE PRECISION,
    hip_circumference     DOUBLE PRECISION,
    thigh_circumference   DOUBLE PRECISION,
    calf_circumference    DOUBLE PRECISION,
    created_at            TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_anthropometrics PRIMARY KEY (id)
);

CREATE TABLE anthropometry_historys
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    account_id            BIGINT                                  NOT NULL,
    sex                   VARCHAR(255),
    birthday              date,
    age                   INTEGER,
    height                DOUBLE PRECISION,
    bodyweight            DOUBLE PRECISION,
    chest_circumference   DOUBLE PRECISION,
    waist_circumference   DOUBLE PRECISION,
    biceps_circumference  DOUBLE PRECISION,
    forearm_circumference DOUBLE PRECISION,
    hip_circumference     DOUBLE PRECISION,
    thigh_circumference   DOUBLE PRECISION,
    calf_circumference    DOUBLE PRECISION,
    created_at            TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_anthropometry_historys PRIMARY KEY (id)
);

CREATE TABLE exercises
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(255) UNIQUE                     NOT NULL,
    description   VARCHAR(255),
    exercise_type VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_exercises PRIMARY KEY (id)
);

CREATE TABLE exercise_muscle_usage
(
    exercise_id      BIGINT       NOT NULL,
    usage_percentage INTEGER NOT NULL,
    muscle_group     VARCHAR(255) NOT NULL,
    CONSTRAINT pk_exercise_muscle_usage PRIMARY KEY (exercise_id, muscle_group),
    CONSTRAINT fk_exercise FOREIGN KEY (exercise_id) REFERENCES exercises(id) ON DELETE CASCADE
);

CREATE TABLE workout_exercises
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    workout_id          BIGINT                                  NOT NULL,
    exercise_id         BIGINT                                  NOT NULL,
    duration_in_seconds INTEGER,
    weight              DOUBLE PRECISION,
    distance            DOUBLE PRECISION,
    repetitions         INTEGER,
    sets                INTEGER,
    reps_in_reserve     INTEGER,
    CONSTRAINT pk_workout_exercises PRIMARY KEY (id)
);

CREATE TABLE workouts
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title             VARCHAR(255),
    workout_date_time TIMESTAMP WITHOUT TIME ZONE,
    account_id        BIGINT                                  NOT NULL,
    CONSTRAINT pk_workouts PRIMARY KEY (id)
);

ALTER TABLE accounts
    ADD CONSTRAINT uc_accounts_username UNIQUE (username);

ALTER TABLE exercises
    ADD CONSTRAINT uc_exercises_name UNIQUE (name);

ALTER TABLE accounts
    ADD CONSTRAINT FK_ACCOUNTS_ON_CURRENT_ANTHROPOMETRY FOREIGN KEY (current_anthropometry_id) REFERENCES anthropometrics (id);

ALTER TABLE anthropometry_historys
    ADD CONSTRAINT FK_ANTHROPOMETRY_HISTORYS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE workouts
    ADD CONSTRAINT FK_WORKOUTS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES accounts (id);

ALTER TABLE workout_exercises
    ADD CONSTRAINT FK_WORKOUT_EXERCISES_ON_EXERCISE FOREIGN KEY (exercise_id) REFERENCES exercises (id);

ALTER TABLE workout_exercises
    ADD CONSTRAINT FK_WORKOUT_EXERCISES_ON_WORKOUT FOREIGN KEY (workout_id) REFERENCES workouts (id);

ALTER TABLE exercise_muscle_usage
    ADD CONSTRAINT fk_exercise_muscle_usage_on_exercise FOREIGN KEY (exercise_id) REFERENCES exercises (id);